'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ReferenceFormats = require('./ReferenceFormats');

var _ReferenceFormats2 = _interopRequireDefault(_ReferenceFormats);

var _utils = require('../bibtex/field_value/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function word2string(obj) {
  if (typeof obj == 'string') return obj;else if (obj.type == 'braced') return word2string(obj.data);else if (obj.unicode) return obj.unicode;else if (obj.string) return obj.string;else if (obj.constructor == Array) return obj.map(word2string).join('');else throw new Error("? " + JSON.stringify(obj));
}

class PersonName {
  /**
   * @param firstNames Array of word objects
   * @param vons Array of word objects
   * @param lastNames Array of word objects
   * @param jrs Array of word objects
   */
  constructor(firstNames, vons, lastNames, jrs) {
    this.firstNames = firstNames.map(_utils.flattenToString);
    this.initials = firstNames.map(_utils.getFirstLetter);
    this.vons = vons.map(_utils.flattenToString);
    this.lastNames = lastNames.map(_utils.flattenToString);
    this.jrs = jrs.map(_utils.flattenToString);
    this.id = this.firstNames.join('-') + '-' + this.vons.join('-') + '-' + this.lastNames.join('-') + '-' + this.jrs.join('-');
  }
}
exports.default = PersonName;